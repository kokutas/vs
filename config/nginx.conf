# 运行用户
user  root;
# 启动进程,通常设置成和cpu的数量相等
worker_processes  auto;
# 全局错误日志及PID文件
# error 日志，指定日志路径，级别。全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg
error_log  /var/log/nginx/debug.log debug;
# info 日志，指定日志路径，级别。全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg
error_log  /var/log/nginx/info.log info;
# notice 日志，指定日志路径，级别。全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg
error_log  /var/log/nginx/notice.log notice;
# warn 日志，指定日志路径，级别。全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg
error_log  /var/log/nginx/warn.log warn;
# error 日志，指定日志路径，级别。全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg
error_log  /var/log/nginx/error.log error;
# crit 日志，指定日志路径，级别。全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg
error_log  /var/log/nginx/crit.log crit;
# info 日志，指定日志路径，级别。全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg
error_log  /var/log/nginx/alert.log alert;
# emerg 日志，指定日志路径，级别。全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg
error_log  /var/log/nginx/emerg.log emerg;
# pid 文件
pid  /var/run/nginx.pid;
# 工作模式及连接数上线
events {
    # 设置网路连接序列化，防止惊群现象发生，默认为on
    accept_mutex on;
    # 设置一个进程是否同时接受多个网络连接，默认为off
    multi_accept on;
    # 事件驱动模型，select|poll|kqueue|epoll|resig|/dev/poll|eventport,epoll是多路复用IO(I/O Multiplexing)中的一种方式,但是仅用于linux2.6以上内核,可以提高nginx的性能
    use epoll;
    # 单个后台worker process进程的最大并发连接数
    worker_connections  1024;
}

# 设定http服务器,利用它的反向代理功能提供负载均衡支持
http {  
    # 文件扩展名与文件类型映射表
    include /etc/nginx/mime.types;
    # 默认文件类型，默认为text/plain
    default_type  application/octet-stream;
    # 自定义日志格式
    # $remote_addr 与 $http_x_forwarded_for 用以记录客户端的ip地址
    # $remote_user ：用来记录客户端用户名称；
    # $time_local ： 用来记录访问时间与时区；
    # $request ： 用来记录请求的url与http协议；
    # $status ： 用来记录请求状态；成功是200；
    # $body_bytes_s ent ：记录发送给客户端文件主体内容大小；
    # $http_referer ：用来记录从那个页面链接访问过来的；
    # $http_user_agent ：记录客户端浏览器的相关信息；
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
    # combined为日志格式的默认值
    access_log  /var/log/nginx/access.log  main;
    # 允许sendfile方式传输文件，默认为off，可以在http块，server块，location块。
    sendfile  on;
    # 每个进程每次调用传输数量不能大于设定的值，默认为0，即不设上限。
    sendfile_max_chunk 100k;
    # 连接超时时间，默认为75s，可以在http，server，location块。
    keepalive_timeout 60;
    tcp_nopush      on;
    tcp_nodelay     on;
    # 开启gzip压缩，降低传输流量
    gzip  on;
    gzip_min_length    1k;
    gzip_buffers    4 16k;
    gzip_http_version  1.1;
    gzip_comp_level  2;
    gzip_types  text/plain application/x-javascript text/css  application/xml;
    gzip_vary on;

    include /etc/nginx/conf.d/*.conf;
}