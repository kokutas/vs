user  root;                                     # 运行用户
worker_processes  auto;                         # 启动进程,通常设置成和cpu的数量相等
                                                # 全局错误日志及PID文件
error_log  /var/log/nginx/debug.log debug;      # error 日志，指定日志路径，级别。全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg
error_log  /var/log/nginx/info.log info;        # info 日志，指定日志路径，级别。全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg
error_log  /var/log/nginx/notice.log notice;    # notice 日志，指定日志路径，级别。全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg
error_log  /var/log/nginx/warn.log warn;        # warn 日志，指定日志路径，级别。全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg
error_log  /var/log/nginx/error.log error;      # error 日志，指定日志路径，级别。全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg
error_log  /var/log/nginx/crit.log crit;        # crit 日志，指定日志路径，级别。全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg
error_log  /var/log/nginx/alert.log alert;      # info 日志，指定日志路径，级别。全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg
error_log  /var/log/nginx/emerg.log emerg;      # info 日志，指定日志路径，级别。全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg
pid        /var/run/nginx.pid;                  # pid 文件


events {                                    # 工作模式及连接数上线
    use epoll;                              # epoll是多路复用IO(I/O Multiplexing)中的一种方式,但是仅用于linux2.6以上内核,可以提高nginx的性能
    worker_connections  1024;               # 单个后台worker process进程的最大并发连接数
}


http {                                                  # 设定http服务器,利用它的反向代理功能提供负载均衡支持
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;

    keepalive_timeout  65;

    gzip  on;

    include /etc/nginx/conf.d/*.conf;
}